#!/usr/bin/env perl
# 
# simple grabber for Al Jazeera and CCTV data from http://zaxmltv.flash.za.org
#

use warnings;

use XMLTV;
use Shepherd::Common;
use POSIX qw(strftime mktime);
use Data::Dump qw(dump);
#
# global variables and settings
#
# supported Shepherd channels and the corresponding number @ zaxmltv

#my @supported = ("AlJazeera","CCTVNews");
#my %channels = (	
#    'AlJazeera' => "406",
#    'CCTVNews' =>"448"
#);

$| = 1;
my $writer;
#my $baseurl = "http://zaxmltv.flash.za.org";

#
# go go go!
#

my %stats;
my $o;

Shepherd::Common::program_begin(\$o, "tv_grab_dvb grabber", "0.03", \%stats);
&start_writing_xmltv();
#my ($channels, $opt_channels, $gaps) =();
#my $channel_xmlid; 

($channels, $opt_channels, $gaps) = Shepherd::Common::read_channels($o);
#dump($channels);
#dump($opt_channels);
# first write the channel names and id's
while (my ($name, $num) = each (@channels)) {
     if ($channels->{$name} || $opt_channels->{$name}) {
       $channel_xmlid = $channels->{$name} || $opt_channels->{$name};
       $writer->write_channel( {'display-name' => [[ "$name", $o->{lang} ]], 'id' => $channel_xmlid } );
     }else{
       Shepherd::Common::log("ignoring unwanted channel $name");     
     }
}

#now the actual program data for each channel
#while (my ($name, $num) = each (%channels)) {
#    if ($channels->{$name} || $opt_channels->{$name}) {
##       $channel_xmlid = $channels->{$name} || $opt_channels->{$name};
#       Shepherd::Common::log("grabbing data for $name - $channel_xmlid");
#       &get_data($num);
#    }
#}

opendir(DIR,"/myth/tv_grab_dvb");
@files = grep(/\.xmltv$/,readdir(DIR));

foreach $file (@files) {
    print ("Grabbing File: $file\n");
    &get_data("/myth/tv_grab_dvb/".$file)
}

$writer->end();

Shepherd::Common::program_end($o, %stats);
exit(0);

##############################################################################

sub start_writing_xmltv
{	
	my %writer_args = ( encoding => 'UTF-8' );
	if ($o->{outputfile}) {
		my $fh = new IO::File(">$o->{outputfile}") || die "can't open $o->{outputfile}: $!";
		$writer_args{OUTPUT} = $fh;
	}

	$writer = new XMLTV::Writer(%writer_args);
	$writer->start ( { 'source-info-name' => "EIT",'generator-info-name' => "$o->{program_name} v$o->{version_number}"} );
}

##############################################################################

sub get_data
{
        my $file = $_[0];
#	my $data = &Shepherd::Common::get_url(url => $baseurl."/schedule/zaxmltv_get.php", postvars => "chanlist[]=$num");
#        if (!$data) {
#                 Shepherd::Common::log("Failed to get XML from '$baseurl'");
#                 $stats{failed_html_get}++;
#                 return 0;
#        }
#        my $listing = XMLTV::parse($data);
        my $listing = XMLTV::parsefile($file);
        # strip the cruft from the source xml, we only want the programs.
        my ($encoding, $credits, $ch, $progs) = @$listing;
        foreach (@$progs) {
#                $_->{channel} = $channel_xmlid;
                $writer->write_programme($_);
        }
                                                                                                                                 
}

##############################################################################

